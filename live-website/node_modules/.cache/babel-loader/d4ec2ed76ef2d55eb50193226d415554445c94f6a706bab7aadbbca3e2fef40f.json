{"ast":null,"code":"import React,{useState}from'react';import ImageUpload from'./components/ImageUpload';import MatrixInput from'./components/MatrixInput';import Visualizer from'./components/Visualizer';import solveZipPuzzle from'./solver';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[matrices,setMatrices]=useState({numbers:[],hWalls:[],vWalls:[],m:0,n:0});const[path,setPath]=useState([]);const[solving,setSolving]=useState(false);const[error,setError]=useState('');const handleMatrices=(numbers,hWalls,vWalls)=>{setMatrices({numbers,hWalls,vWalls,m:numbers.length,n:numbers[0].length});setPath([]);setError('');};const handleSolve=()=>{setSolving(true);setTimeout(()=>{try{const result=solveZipPuzzle(matrices.numbers,matrices.hWalls,matrices.vWalls);if(result&&result.length>0){setPath(result);setError('');}else{setPath([]);setError('No solution found.');}}catch(err){setPath([]);setError('Error: '+err.message);}setSolving(false);},100);// Allow UI to update\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Linkedin Zip Solver\"}),/*#__PURE__*/_jsx(ImageUpload,{onExtracted:handleMatrices}),/*#__PURE__*/_jsx(MatrixInput,{numbers:matrices.numbers,hWalls:matrices.hWalls,vWalls:matrices.vWalls,setMatrices:handleMatrices}),/*#__PURE__*/_jsx(\"button\",{style:{margin:'20px 0',fontSize:'1.1rem',padding:'12px 24px'},onClick:handleSolve,disabled:solving||matrices.m===0,children:solving?'Solving...':'Solve Puzzle'}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',margin:'10px 0'},children:error}),path.length>0&&/*#__PURE__*/_jsx(Visualizer,{numbers:matrices.numbers,path:path,hWalls:matrices.hWalls,vWalls:matrices.vWalls}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32,color:'#888',fontSize:'0.95rem'},children:[/*#__PURE__*/_jsx(\"b\",{children:\"How to use:\"}),\" Upload a screenshot or enter the grid manually. Adjust (if needed), then click \",/*#__PURE__*/_jsx(\"b\",{children:\"Solve Puzzle\"}),\". The colored band shows the path. You can edit matrices if OCR is imperfect.\"]})]});}export default App;","map":{"version":3,"names":["React","useState","ImageUpload","MatrixInput","Visualizer","solveZipPuzzle","jsx","_jsx","jsxs","_jsxs","App","matrices","setMatrices","numbers","hWalls","vWalls","m","n","path","setPath","solving","setSolving","error","setError","handleMatrices","length","handleSolve","setTimeout","result","err","message","className","children","onExtracted","style","margin","fontSize","padding","onClick","disabled","color","marginTop"],"sources":["/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ImageUpload from './components/ImageUpload';\nimport MatrixInput from './components/MatrixInput';\nimport Visualizer from './components/Visualizer';\nimport solveZipPuzzle from './solver';\n\nfunction App() {\n  const [matrices, setMatrices] = useState({\n    numbers: [],\n    hWalls: [],\n    vWalls: [],\n    m: 0,\n    n: 0,\n  });\n  const [path, setPath] = useState([]);\n  const [solving, setSolving] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleMatrices = (numbers, hWalls, vWalls) => {\n    setMatrices({\n      numbers,\n      hWalls,\n      vWalls,\n      m: numbers.length,\n      n: numbers[0].length,\n    });\n    setPath([]);\n    setError('');\n  };\n\n  const handleSolve = () => {\n    setSolving(true);\n    setTimeout(() => {\n      try {\n        const result = solveZipPuzzle(\n          matrices.numbers,\n          matrices.hWalls,\n          matrices.vWalls\n        );\n        if (result && result.length > 0) {\n          setPath(result);\n          setError('');\n        } else {\n          setPath([]);\n          setError('No solution found.');\n        }\n      } catch (err) {\n        setPath([]);\n        setError('Error: ' + err.message);\n      }\n      setSolving(false);\n    }, 100); // Allow UI to update\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Linkedin Zip Solver</h1>\n      <ImageUpload onExtracted={handleMatrices} />\n      <MatrixInput\n        numbers={matrices.numbers}\n        hWalls={matrices.hWalls}\n        vWalls={matrices.vWalls}\n        setMatrices={handleMatrices}\n      />\n      <button\n        style={{ margin: '20px 0', fontSize: '1.1rem', padding: '12px 24px' }}\n        onClick={handleSolve}\n        disabled={solving || matrices.m === 0}\n      >\n        {solving ? 'Solving...' : 'Solve Puzzle'}\n      </button>\n      {error && <div style={{ color: 'red', margin: '10px 0' }}>{error}</div>}\n      {path.length > 0 && (\n        <Visualizer\n          numbers={matrices.numbers}\n          path={path}\n          hWalls={matrices.hWalls}\n          vWalls={matrices.vWalls}\n        />\n      )}\n      <div style={{ marginTop: 32, color: '#888', fontSize: '0.95rem' }}>\n        <b>How to use:</b> Upload a screenshot or enter the grid manually.  \n        Adjust (if needed), then click <b>Solve Puzzle</b>.  \n        The colored band shows the path. You can edit matrices if OCR is imperfect.\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}