{"ast":null,"code":"var _jsxFileName = \"/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MatrixInput from \"./components/MatrixInput\";\nimport solveZipPuzzle from \"./solver\";\nimport ZipVisualizer from './components/ZipVisualizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction make2D(rows, cols, val) {\n  return Array.from({\n    length: rows\n  }, () => Array(cols).fill(val));\n}\nexport default function App() {\n  _s();\n  const [rows, setRows] = useState(7);\n  const [cols, setCols] = useState(7);\n  const [matrix, setMatrix] = useState(make2D(rows, cols, -1));\n  const [hWalls, setHWalls] = useState(make2D(rows, cols, 0));\n  const [vWalls, setVWalls] = useState(make2D(rows, cols, 0));\n  const [solution, setSolution] = useState(null);\n  const [error, setError] = useState(null);\n\n  // When grid size changes, resize matrices\n  React.useEffect(() => {\n    setMatrix(prev => prev.length === rows && prev[0].length === cols ? prev : make2D(rows, cols, -1));\n    setHWalls(prev => prev.length === rows && prev[0].length === cols ? prev : make2D(rows, cols, 0));\n    setVWalls(prev => prev.length === rows && prev[0].length === cols ? prev : make2D(rows, cols, 0));\n  }, [rows, cols]);\n  function handleSolve() {\n    try {\n      // Always pass deep copies\n      const matrixCopy = matrix.map(row => row.slice());\n      const hWallsCopy = hWalls.map(row => row.slice());\n      const vWallsCopy = vWalls.map(row => row.slice());\n      const result = solveZipPuzzle(matrixCopy, hWallsCopy, vWallsCopy);\n      setSolution(result);\n      setError(null);\n    } catch (e) {\n      setError(e.message);\n      setSolution(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LinkedIn Zip Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n      matrix: matrix,\n      setMatrix: setMatrix,\n      hWalls: hWalls,\n      setHWalls: setHWalls,\n      vWalls: vWalls,\n      setVWalls: setVWalls,\n      rows: rows,\n      setRows: setRows,\n      cols: cols,\n      setCols: setCols\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSolve,\n      style: {\n        margin: \"12px 0\"\n      },\n      children: \"Solve Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), solution && solution.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Solution Visualization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ZipVisualizer, {\n        matrix: matrix,\n        solution: solution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this), solution && solution.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No solution found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N/3U+iS9NJWPpABW659kjAW2uIc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MatrixInput","solveZipPuzzle","ZipVisualizer","jsxDEV","_jsxDEV","make2D","rows","cols","val","Array","from","length","fill","App","_s","setRows","setCols","matrix","setMatrix","hWalls","setHWalls","vWalls","setVWalls","solution","setSolution","error","setError","useEffect","prev","handleSolve","matrixCopy","map","row","slice","hWallsCopy","vWallsCopy","result","e","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","color","_c","$RefreshReg$"],"sources":["/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MatrixInput from \"./components/MatrixInput\";\nimport solveZipPuzzle from \"./solver\";\nimport ZipVisualizer from './components/ZipVisualizer';\n\nfunction make2D(rows, cols, val) {\n  return Array.from({ length: rows }, () => Array(cols).fill(val));\n}\n\nexport default function App() {\n  const [rows, setRows] = useState(7);\n  const [cols, setCols] = useState(7);\n\n  const [matrix, setMatrix] = useState(make2D(rows, cols, -1));\n  const [hWalls, setHWalls] = useState(make2D(rows, cols, 0));\n  const [vWalls, setVWalls] = useState(make2D(rows, cols, 0));\n  const [solution, setSolution] = useState(null);\n  const [error, setError] = useState(null);\n\n  // When grid size changes, resize matrices\n  React.useEffect(() => {\n    setMatrix(prev =>\n      prev.length === rows && prev[0].length === cols\n        ? prev\n        : make2D(rows, cols, -1)\n    );\n    setHWalls(prev =>\n      prev.length === rows && prev[0].length === cols\n        ? prev\n        : make2D(rows, cols, 0)\n    );\n    setVWalls(prev =>\n      prev.length === rows && prev[0].length === cols\n        ? prev\n        : make2D(rows, cols, 0)\n    );\n  }, [rows, cols]);\n\n  function handleSolve() {\n    try {\n      // Always pass deep copies\n      const matrixCopy = matrix.map(row => row.slice());\n      const hWallsCopy = hWalls.map(row => row.slice());\n      const vWallsCopy = vWalls.map(row => row.slice());\n      const result = solveZipPuzzle(matrixCopy, hWallsCopy, vWallsCopy);\n      setSolution(result);\n      setError(null);\n    } catch (e) {\n      setError(e.message);\n      setSolution(null);\n    }\n  }\n\n  return (\n    <div style={{padding: 24}}>\n      <h1>LinkedIn Zip Solver</h1>\n      <MatrixInput\n        matrix={matrix}\n        setMatrix={setMatrix}\n        hWalls={hWalls}\n        setHWalls={setHWalls}\n        vWalls={vWalls}\n        setVWalls={setVWalls}\n        rows={rows}\n        setRows={setRows}\n        cols={cols}\n        setCols={setCols}\n      />\n      <button onClick={handleSolve} style={{margin: \"12px 0\"}}>Solve Puzzle</button>\n      {error && <div style={{color: \"red\"}}>{error}</div>}\n      {solution && solution.length > 0 && (\n  <div>\n    <h3>Solution Visualization:</h3>\n    <ZipVisualizer matrix={matrix} solution={solution} />\n  </div>\n)}\n      {solution && solution.length === 0 && <div>No solution found.</div>}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}