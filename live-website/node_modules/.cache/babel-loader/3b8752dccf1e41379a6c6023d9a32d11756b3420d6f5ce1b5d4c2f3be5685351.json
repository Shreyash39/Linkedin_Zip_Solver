{"ast":null,"code":"import React from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MatrixInput(_ref){let{matrix,setMatrix,hWalls,setHWalls,vWalls,setVWalls,rows,cols}=_ref;// Helper to update a value in a 2D array immutably\nfunction update2D(arr,r,c,val){return arr.map((row,i)=>i===r?row.map((cell,j)=>j===c?val:cell):row);}// Handle number input (matrix)\nfunction handleMatrixChange(r,c,val){let numVal=val===\"\"?-1:parseInt(val,10);if(isNaN(numVal))numVal=-1;setMatrix(update2D(matrix,r,c,numVal));}// Handle horizontal wall input\nfunction handleHWallsChange(r,c,val){let numVal=val===\"\"?0:parseInt(val,10);if(isNaN(numVal)||numVal!==1)numVal=0;setHWalls(update2D(hWalls,r,c,numVal));}// Handle vertical wall input\nfunction handleVWallsChange(r,c,val){let numVal=val===\"\"?0:parseInt(val,10);if(isNaN(numVal)||numVal!==1)numVal=0;setVWalls(update2D(vWalls,r,c,numVal));}// Render a 2D input grid\nfunction renderGrid(arr,onChange){let placeholder=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";let min=arguments.length>3&&arguments[3]!==undefined?arguments[3]:undefined;let max=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;return/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:arr.map((row,r)=>/*#__PURE__*/_jsx(\"tr\",{children:row.map((cell,c)=>/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{style:{width:\"2.5em\",textAlign:\"center\"},type:\"number\",value:cell===-1?\"\":cell,min:min,max:max,placeholder:placeholder,onChange:e=>onChange(r,c,e.target.value)})},c))},r))})});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Numbers Matrix (use -1 for blank)\"}),renderGrid(matrix,handleMatrixChange,\"-1 = blank\"),/*#__PURE__*/_jsx(\"h4\",{children:\"Horizontal Walls (1=block, 0=open)\"}),renderGrid(hWalls,handleHWallsChange,\"0/1\",0,1),/*#__PURE__*/_jsx(\"h4\",{children:\"Vertical Walls (1=block, 0=open)\"}),renderGrid(vWalls,handleVWallsChange,\"0/1\",0,1)]});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","MatrixInput","_ref","matrix","setMatrix","hWalls","setHWalls","vWalls","setVWalls","rows","cols","update2D","arr","r","c","val","map","row","i","cell","j","handleMatrixChange","numVal","parseInt","isNaN","handleHWallsChange","handleVWallsChange","renderGrid","onChange","placeholder","arguments","length","undefined","min","max","children","style","width","textAlign","type","value","e","target"],"sources":["/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/components/MatrixInput.js"],"sourcesContent":["import React from \"react\";\n\nexport default function MatrixInput({\n  matrix, setMatrix,\n  hWalls, setHWalls,\n  vWalls, setVWalls,\n  rows, cols\n}) {\n  // Helper to update a value in a 2D array immutably\n  function update2D(arr, r, c, val) {\n    return arr.map((row, i) =>\n      i === r ? row.map((cell, j) => (j === c ? val : cell)) : row\n    );\n  }\n\n  // Handle number input (matrix)\n  function handleMatrixChange(r, c, val) {\n    let numVal = val === \"\" ? -1 : parseInt(val, 10);\n    if (isNaN(numVal)) numVal = -1;\n    setMatrix(update2D(matrix, r, c, numVal));\n  }\n\n  // Handle horizontal wall input\n  function handleHWallsChange(r, c, val) {\n    let numVal = val === \"\" ? 0 : parseInt(val, 10);\n    if (isNaN(numVal) || numVal !== 1) numVal = 0;\n    setHWalls(update2D(hWalls, r, c, numVal));\n  }\n\n  // Handle vertical wall input\n  function handleVWallsChange(r, c, val) {\n    let numVal = val === \"\" ? 0 : parseInt(val, 10);\n    if (isNaN(numVal) || numVal !== 1) numVal = 0;\n    setVWalls(update2D(vWalls, r, c, numVal));\n  }\n\n  // Render a 2D input grid\n  function renderGrid(arr, onChange, placeholder = \"\", min = undefined, max = undefined) {\n    return (\n      <table>\n        <tbody>\n          {arr.map((row, r) => (\n            <tr key={r}>\n              {row.map((cell, c) => (\n                <td key={c}>\n                  <input\n                    style={{ width: \"2.5em\", textAlign: \"center\" }}\n                    type=\"number\"\n                    value={cell === -1 ? \"\" : cell}\n                    min={min}\n                    max={max}\n                    placeholder={placeholder}\n                    onChange={e => onChange(r, c, e.target.value)}\n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  return (\n    <div>\n      <h3>Numbers Matrix (use -1 for blank)</h3>\n      {renderGrid(matrix, handleMatrixChange, \"-1 = blank\")}\n\n      <h4>Horizontal Walls (1=block, 0=open)</h4>\n      {renderGrid(hWalls, handleHWallsChange, \"0/1\", 0, 1)}\n\n      <h4>Vertical Walls (1=block, 0=open)</h4>\n      {renderGrid(vWalls, handleVWallsChange, \"0/1\", 0, 1)}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}