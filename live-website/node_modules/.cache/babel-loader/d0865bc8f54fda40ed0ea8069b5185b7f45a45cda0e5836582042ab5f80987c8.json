{"ast":null,"code":"var _jsxFileName = \"/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MatrixInput from \"./components/MatrixInput\";\nimport solveZipPuzzle from \"./solver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction make2D(rows, cols, val) {\n  return Array.from({\n    length: rows\n  }, () => Array(cols).fill(val));\n}\nexport default function App() {\n  _s();\n  // You can allow user to set size, here hardcoded for demo\n  const [rows, setRows] = useState(7);\n  const [cols, setCols] = useState(7);\n  const [matrix, setMatrix] = useState(make2D(rows, cols, -1));\n  const [hWalls, setHWalls] = useState(make2D(rows, cols, 0));\n  const [vWalls, setVWalls] = useState(make2D(rows, cols, 0));\n  const [solution, setSolution] = useState(null);\n  const [error, setError] = useState(null);\n  function handleSolve() {\n    try {\n      // Always pass deep copies\n      const matrixCopy = matrix.map(row => row.slice());\n      const hWallsCopy = hWalls.map(row => row.slice());\n      const vWallsCopy = vWalls.map(row => row.slice());\n      const result = solveZipPuzzle(matrixCopy, hWallsCopy, vWallsCopy);\n      setSolution(result);\n      setError(null);\n    } catch (e) {\n      setError(e.message);\n      setSolution(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LinkedIn Zip Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatrixInput, {\n      matrix: matrix,\n      setMatrix: setMatrix,\n      hWalls: hWalls,\n      setHWalls: setHWalls,\n      vWalls: vWalls,\n      setVWalls: setVWalls,\n      rows: rows,\n      cols: cols\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSolve,\n      style: {\n        margin: \"12px 0\"\n      },\n      children: \"Solve Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), solution && solution.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Solution Path (row,col):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(solution, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), solution && solution.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No solution found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MC2yJlwMf7JL01CsRhrSUT4ZgAw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MatrixInput","solveZipPuzzle","jsxDEV","_jsxDEV","make2D","rows","cols","val","Array","from","length","fill","App","_s","setRows","setCols","matrix","setMatrix","hWalls","setHWalls","vWalls","setVWalls","solution","setSolution","error","setError","handleSolve","matrixCopy","map","row","slice","hWallsCopy","vWallsCopy","result","e","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","color","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MatrixInput from \"./components/MatrixInput\";\nimport solveZipPuzzle from \"./solver\";\n\nfunction make2D(rows, cols, val) {\n  return Array.from({ length: rows }, () => Array(cols).fill(val));\n}\n\nexport default function App() {\n  // You can allow user to set size, here hardcoded for demo\n  const [rows, setRows] = useState(7);\n  const [cols, setCols] = useState(7);\n\n  const [matrix, setMatrix] = useState(make2D(rows, cols, -1));\n  const [hWalls, setHWalls] = useState(make2D(rows, cols, 0));\n  const [vWalls, setVWalls] = useState(make2D(rows, cols, 0));\n  const [solution, setSolution] = useState(null);\n  const [error, setError] = useState(null);\n\n  function handleSolve() {\n    try {\n      // Always pass deep copies\n      const matrixCopy = matrix.map(row => row.slice());\n      const hWallsCopy = hWalls.map(row => row.slice());\n      const vWallsCopy = vWalls.map(row => row.slice());\n      const result = solveZipPuzzle(matrixCopy, hWallsCopy, vWallsCopy);\n      setSolution(result);\n      setError(null);\n    } catch (e) {\n      setError(e.message);\n      setSolution(null);\n    }\n  }\n\n  return (\n    <div style={{padding: 24}}>\n      <h1>LinkedIn Zip Solver</h1>\n      {/* Optionally, add controls to set rows/cols here */}\n      <MatrixInput\n        matrix={matrix}\n        setMatrix={setMatrix}\n        hWalls={hWalls}\n        setHWalls={setHWalls}\n        vWalls={vWalls}\n        setVWalls={setVWalls}\n        rows={rows}\n        cols={cols}\n      />\n      <button onClick={handleSolve} style={{margin: \"12px 0\"}}>Solve Puzzle</button>\n      {error && <div style={{color: \"red\"}}>{error}</div>}\n      {solution && solution.length > 0 && (\n        <div>\n          <h3>Solution Path (row,col):</h3>\n          <pre>{JSON.stringify(solution, null, 2)}</pre>\n        </div>\n      )}\n      {solution && solution.length === 0 && <div>No solution found.</div>}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}