{"ast":null,"code":"import React from'react';// Helper: get color gradient for path\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function getColor(idx,total){// blue gradient (LinkedIn style)\nconst t=total<=1?0:idx/(total-1);const r=Math.round(24+60*(1-t));// 24..84\nconst g=Math.round(119+90*(1-t));// 119..209\nconst b=Math.round(242+13*(1-t));// 242..255\nreturn\"rgb(\".concat(r,\",\").concat(g,\",\").concat(b,\")\");}export default function Visualizer(_ref){let{numbers,path,hWalls,vWalls}=_ref;const m=numbers.length,n=numbers[0].length;const cellSize=48,radius=16,gap=8;const gridW=n*cellSize+gap,gridH=m*cellSize+gap;// Map path to lookup for fast highlighting\nconst pathSet=new Set(path.map(_ref2=>{let[i,j]=_ref2;return\"\".concat(i,\",\").concat(j);}));const pathIdx={};path.forEach((_ref3,idx)=>{let[i,j]=_ref3;pathIdx[\"\".concat(i,\",\").concat(j)]=idx;});// Helper: draw path as thick SVG polyline\nconst points=path.map(_ref4=>{let[i,j]=_ref4;return[j*cellSize+cellSize/2+gap/2,i*cellSize+cellSize/2+gap/2];});const pathLine=points.map(pt=>pt.join(',')).join(' ');return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Puzzle Solution\"}),/*#__PURE__*/_jsxs(\"svg\",{width:gridW,height:gridH,style:{background:\"#eaf1fa\",borderRadius:10},children:[points.length>=2&&/*#__PURE__*/_jsx(\"polyline\",{points:pathLine,fill:\"none\",stroke:\"url(#zip-grad)\",strokeWidth:16,strokeLinejoin:\"round\",strokeLinecap:\"round\",opacity:0.92}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"linearGradient\",{id:\"zip-grad\",x1:\"0\",y1:\"0\",x2:gridW,y2:gridH,gradientUnits:\"userSpaceOnUse\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#1877f2\"}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:\"#0099ff\"})]})}),[...Array(m)].map((_,i)=>[...Array(n)].map((_,j)=>{const x=j*cellSize+gap/2;const y=i*cellSize+gap/2;const isOnPath=pathSet.has(\"\".concat(i,\",\").concat(j));const idx=pathIdx[\"\".concat(i,\",\").concat(j)];// Wall overlays\nconst hWall=j<n-1&&hWalls[i][j]===1;const vWall=i<m-1&&vWalls[i][j]===1;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"rect\",{x:x,y:y,width:cellSize,height:cellSize,fill:\"#fff\",stroke:\"#d0d5df\",rx:8}),hWall&&/*#__PURE__*/_jsx(\"rect\",{x:x+cellSize-4,y:y+3,width:7,height:cellSize-6,fill:\"#b4bccd\",rx:2}),vWall&&/*#__PURE__*/_jsx(\"rect\",{x:x+3,y:y+cellSize-4,width:cellSize-6,height:7,fill:\"#b4bccd\",rx:2}),isOnPath&&/*#__PURE__*/_jsx(\"circle\",{cx:x+cellSize/2,cy:y+cellSize/2,r:radius+2,fill:getColor(idx,path.length),opacity:0.28}),numbers[i][j]!==-1&&/*#__PURE__*/_jsx(\"circle\",{cx:x+cellSize/2,cy:y+cellSize/2,r:radius,fill:\"#222\",stroke:\"#b6c4de\",strokeWidth:isOnPath?2.5:1}),numbers[i][j]!==-1&&/*#__PURE__*/_jsx(\"text\",{x:x+cellSize/2,y:y+cellSize/2+5,textAnchor:\"middle\",fontFamily:\"Segoe UI, Arial\",fontSize:\"1.15em\",fill:\"#fff\",fontWeight:600,children:numbers[i][j]})]},i+'-'+j);}))]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16,fontSize:14,color:\"#555\"},children:[/*#__PURE__*/_jsx(\"b\",{children:\"Legend:\"}),\" Black circles = clues, Colored band = path, Blue = start, Light blue = end.\"]})]});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","getColor","idx","total","t","r","Math","round","g","b","concat","Visualizer","_ref","numbers","path","hWalls","vWalls","m","length","n","cellSize","radius","gap","gridW","gridH","pathSet","Set","map","_ref2","i","j","pathIdx","forEach","_ref3","points","_ref4","pathLine","pt","join","children","width","height","style","background","borderRadius","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","opacity","id","x1","y1","x2","y2","gradientUnits","offset","stopColor","Array","_","x","y","isOnPath","has","hWall","vWall","rx","cx","cy","textAnchor","fontFamily","fontSize","fontWeight","marginTop","color"],"sources":["/Users/shreyashkiranchaudhari/Desktop/Projects/DSA-Zip/Github_Clone_website/Linkedin_Zip_Solver/live-website/src/components/Visualizer.js"],"sourcesContent":["import React from 'react';\n\n// Helper: get color gradient for path\nfunction getColor(idx, total) {\n  // blue gradient (LinkedIn style)\n  const t = total <= 1 ? 0 : idx / (total - 1);\n  const r = Math.round(24 + 60 * (1 - t)); // 24..84\n  const g = Math.round(119 + 90 * (1 - t)); // 119..209\n  const b = Math.round(242 + 13 * (1 - t)); // 242..255\n  return `rgb(${r},${g},${b})`;\n}\n\nexport default function Visualizer({ numbers, path, hWalls, vWalls }) {\n  const m = numbers.length, n = numbers[0].length;\n  const cellSize = 48, radius = 16, gap = 8;\n  const gridW = n * cellSize + gap, gridH = m * cellSize + gap;\n\n  // Map path to lookup for fast highlighting\n  const pathSet = new Set(path.map(([i, j]) => `${i},${j}`));\n  const pathIdx = {};\n  path.forEach(([i, j], idx) => { pathIdx[`${i},${j}`] = idx; });\n\n  // Helper: draw path as thick SVG polyline\n  const points = path.map(([i, j]) => [\n    j * cellSize + cellSize / 2 + gap / 2,\n    i * cellSize + cellSize / 2 + gap / 2,\n  ]);\n  const pathLine = points.map(pt => pt.join(',')).join(' ');\n\n  return (\n    <div>\n      <h2>Puzzle Solution</h2>\n      <svg width={gridW} height={gridH} style={{ background: \"#eaf1fa\", borderRadius: 10 }}>\n        {/* Path band */}\n        {points.length >= 2 && (\n          <polyline\n            points={pathLine}\n            fill=\"none\"\n            stroke=\"url(#zip-grad)\"\n            strokeWidth={16}\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            opacity={0.92}\n          />\n        )}\n        <defs>\n          <linearGradient id=\"zip-grad\" x1=\"0\" y1=\"0\" x2={gridW} y2={gridH} gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0%\" stopColor=\"#1877f2\" />\n            <stop offset=\"100%\" stopColor=\"#0099ff\" />\n          </linearGradient>\n        </defs>\n        {/* Draw grid */}\n        {[...Array(m)].map((_, i) =>\n          [...Array(n)].map((_, j) => {\n            const x = j * cellSize + gap / 2;\n            const y = i * cellSize + gap / 2;\n            const isOnPath = pathSet.has(`${i},${j}`);\n            const idx = pathIdx[`${i},${j}`];\n            // Wall overlays\n            const hWall = j < n - 1 && hWalls[i][j] === 1;\n            const vWall = i < m - 1 && vWalls[i][j] === 1;\n            return (\n              <g key={i + '-' + j}>\n                {/* Cell background */}\n                <rect x={x} y={y} width={cellSize} height={cellSize} fill=\"#fff\" stroke=\"#d0d5df\" rx={8} />\n                {/* Wall overlays */}\n                {hWall && (\n                  <rect\n                    x={x + cellSize - 4}\n                    y={y + 3}\n                    width={7}\n                    height={cellSize - 6}\n                    fill=\"#b4bccd\"\n                    rx={2}\n                  />\n                )}\n                {vWall && (\n                  <rect\n                    x={x + 3}\n                    y={y + cellSize - 4}\n                    width={cellSize - 6}\n                    height={7}\n                    fill=\"#b4bccd\"\n                    rx={2}\n                  />\n                )}\n                {/* Path highlight */}\n                {isOnPath && (\n                  <circle\n                    cx={x + cellSize / 2}\n                    cy={y + cellSize / 2}\n                    r={radius + 2}\n                    fill={getColor(idx, path.length)}\n                    opacity={0.28}\n                  />\n                )}\n                {/* Number disc */}\n                {numbers[i][j] !== -1 && (\n                  <circle\n                    cx={x + cellSize / 2}\n                    cy={y + cellSize / 2}\n                    r={radius}\n                    fill=\"#222\"\n                    stroke=\"#b6c4de\"\n                    strokeWidth={isOnPath ? 2.5 : 1}\n                  />\n                )}\n                {/* Number text */}\n                {numbers[i][j] !== -1 && (\n                  <text\n                    x={x + cellSize / 2}\n                    y={y + cellSize / 2 + 5}\n                    textAnchor=\"middle\"\n                    fontFamily=\"Segoe UI, Arial\"\n                    fontSize=\"1.15em\"\n                    fill=\"#fff\"\n                    fontWeight={600}\n                  >\n                    {numbers[i][j]}\n                  </text>\n                )}\n              </g>\n            );\n          })\n        )}\n      </svg>\n      <div style={{ marginTop: 16, fontSize: 14, color: \"#555\" }}>\n        <b>Legend:</b> Black circles = clues, Colored band = path, Blue = start, Light blue = end.\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}